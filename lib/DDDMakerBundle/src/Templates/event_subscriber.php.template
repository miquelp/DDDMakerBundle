<?php

declare(strict_types=1);

namespace {{t_namespace}};

use {{t_interface_full_namespace}};
use {{t_use_case_full_namespace}};
use {{t_event_full_namespace}};

final class {{t_class_name}} implements {{t_interface_name}}
{
    private {{t_use_case_class_name}} $useCase;

    public function __construct({{t_use_case_class_name}} $useCase)
    {
        $this->useCase = $useCase;
    }

    public function __invoke({{t_event_class_name}} $event): void
    {
        $this->useCase->__invoke();
    }
}