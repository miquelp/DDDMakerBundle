TODO Tasks:

- Generated code should be obtained via some sort of templating.
- Use yaml config to define paths and generated code configurations
    - Where are bounded contexts located.
    - Where are DDD elements located inside a bounded context.
    - What interface, if any, should DDD elements implement.
    - What class, if any, should DDD elements extend from.
- A lot of code is being duplicated now, find a way (if it makes sense) to abstract that code (i.e. generator classes, finders...)
- Commands that generate DTO elements (such as events, commands, queries...) should ask for primitive types that will be added to the generated class.
- Configure Bundle and push it to packagist
- Every class that is generated, should be generated in tests directory as well following same path.
- Tests. To test the bundle, all I/O functions (i.e. scandir(), file_put_contents()...) that are being used will have to be abstracted to an interface so we can mock them during test execution.

Templates:
- Event (ok)
- Event subscriber
- Command (ok)
- CommandHandler (ok)
- Query (ok)
- QueryHandler (ok)
- Response
- UseCase